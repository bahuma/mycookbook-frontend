openapi: 3.0.1
info:
  title: MyCookbook API
  description: API for the cookbook
  version: 0.1.0
servers:
  - url: 'http://localhost:8000'
    description: Local development
security:
  - {}
  - bearerAuth: []
paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: OK
      security:
        - {}
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login and get a JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: The mail of the user
                password:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - token
                properties:
                  token:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJhbGc.eyJpYXQeyJ0eXAiOi.JKV1QiLCJhbGciOjzU
                    description: |
                      A [JSON Web Token](https://jwt.io) (JWT)

                      The payload of the token contains the roles and the email address of the user.
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: Invalid credentials
      security:
        - {}
  /api/cookbooks:
    get:
      tags:
        - Cookbooks
      summary: List own cookbooks
      responses:
        200:
          description: List of cookbooks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Cookbook"
        401:
          $ref: '#/components/responses/UnauthorizedError'

  /api/cookbooks/{cookbook}/recipes:
    get:
      tags:
        - Recipes
      summary: List recipes of a cookbook
      parameters:
        - name: cookbook
          in: path
          description: Id of the cookbook
          required: true
          schema:
            type: integer
      responses:
        200:
          description: List of recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Recipe"
        401:
          $ref: '#/components/responses/UnauthorizedError'
    post:
      tags:
        - Recipes
      summary: Import a recipe from a website
      description: Extracts json+ld information from an url and stores it in the database
      parameters:
        - name: cookbook
          in: path
          description: Id of the cookbook
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  description: The url to extract the recipe from
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  errors:
                    type: string
                    example: The recipe could not be extracted
        401:
          $ref: '#/components/responses/UnauthorizedError'


components:
  schemas:
    Cookbook:
      type: object
      required:
        - id
        - title
        - owner
      properties:
        id:
          type: integer
        title:
          type: string
          example: My Cookbook
        owner:
          type: integer
          description: User ID of the owner of this cookbook
    Recipe:
      type: object
      required:
        - id
        - title
        - cookbook
      properties:
        id:
          type: integer
        title:
          type: string
          example: Banana Break
        cookbook:
          type: integer
          description: The id of the cookbook this recipe belongs to
        schemaorg:
          type: object
          description: Schema.org representation of type [Recipe](https://schema.org/Recipe)
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid.
      content:
        application/json:
          schema:
            properties:
              code:
                type: integer
                example: 401
              message:
                type: string
                example: Invalid JWT token
